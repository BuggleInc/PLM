Most informations presented in this file should probably be converted
to github issues.

***************** BUGS

* Some tests of countTeen() seem wrong when compared to the mission text

* In lightbot, the last instruction does not refresh the world when executed.

* try to remove the *sys-package-mgr* processing messages when jython is loading

***************** ENGINE IMPROVEMENT

 * We could use the same shortcuts than eclipse
 * We could represent graphically the textual diff between the
   expected world and the actual one. We would have red circles on
   cells that have an error (either wrong color or wrong message), red
   crosses on badly located buggles, etc.
 * Locations displayed in the console should be links that move the editor.
 * During step-by-step execution, it'd be great to display the content
   of values, but I'm not sure of how to do that. Introspection could
   be a way, but I think that it's not possible. We could also convert
   everything to an eclipse plugin, but it seems to be a rather massive
   amount of work.
 * We should modify the JavaEditor so that it follows the execution
   point, just like the lightbot editor does.

***************** LESSONS

There is a bunch of ideas on the pages of people that invented the
buggle concept. For example:

http://cs.wellesley.edu/~cs111/fall98/assignments.html

***************** UNIVERSES

Pedagogical micro-worlds
 * Karel the robot (it may be sufficient to build a loader of karel
   worlds within the buggle world)
 * PatchWorld (see http://cs.wellesley.edu/~cs111/fall07/notes/lectures/06_picture_world_intro_web.pdf)
Programmer games (may require a King of Hill mode?)
 * CodeRuler (strategy)
 * CodeRobot (fights between robots)
 * CodeRally (racing cars)
 * CodeInvaders (fight between spaceships)
   https://www-927.ibm.com/ibm/cas/hspc/competition/
 * MARS (assembly) http://courses.missouristate.edu/kenvollmar/mars/
 * MMIX (assembly by Knuth) http://mmix.cs.hm.edu/index.html
 * Corewars

http://www.essentialmath.com/tutorial.htm
 Essential Math for Games Programmers
http://www.redblobgames.com/articles/visibility/
 Introduction to the algorithms behind the games