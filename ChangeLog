20130516:
  * Add an icon depicting the programming language in the status bar
  * Various polishing of the exercises in Python
  * Fix issue #64: Buggle interactive controls are now properly
    initialized
  * Package maze, welcome, lightbot, sort and bat.string1 and recursion exercises in their own directories
  * Refresh the french translation
  * Add a control panel for the Sorting World
  * Start porting bat exercises to python
  * Port hanoiWorld to python
20130515:
  * Huge python cleanup:
    - various cleanups, code factorization and bug fixes
    - Create or improve the bindings of Turtle, Sorting and Buggle
      worlds
    - Port many exercises to python, testing that the bindings are
      sufficients, and [partially] rewriting the mission text to that
      extend. The templates are not sufficient yet for absolutely all
      exercises, but many of them are. 
    - Fix line number computation in error messages coming from python
    - If python is the default language, use the python entity to
      compute the answer. Note that it still fails for some exercises.
    - Add back the jruby jar file, as jython needs it to access POSIX
  * Merge both views of sorting worlds, toward code simplification
  * Rewrite most sorting exercises mission texts after recent splitup
    of our mega exercise into several ones with one entity only each
  * Refresh the french translation
  * Simplify Random Mouse exercise, fix the demo of Pledge algorithm
  * Add a combobox to switch to next exercise in "success" dialog
  * Add an interactive way to change the buggle color and brush color
  * Baseball exercise of SMN can now be played with more than 2
    players per base
20130416:
  * Kill several seamingly good ideas that complicated the code base:
    - aliased source files: student must keep them synchronized
      manually now. We may want to reintroduce this at some point?
    - Java code that cannot be compiled. This would have been useful
      only for user-provided text files, but we don't use it now.
    - uneditable source files. The student will see all files passed
      to the compiler, now. This was never used in production
    - inconditional static rewriting patterns to apply to the source
      code. People should change the code in their source directly :)
    - lessons cannot be sequential anymore. Forbidding pupils to
      attempt the exercise in the order they want is not in the JLM
      way of style anyway.
    - exercises cannot have more than one kind of exercise. This was
      introduced to have all sorting exercises at once, but this was
      split in several exercises because the SortingView was gone amok.
  * Simplify a bit the way external lesson files are loaded
  * Remove a bunch of unused dependencies on external jars.
    The distribution jar is now only half as big only (still 20M).
  * Request a confirmation from the user (through a dialog) before
    reverting the exercise, that was a mean trap...
20130328:
  * Merge all code (and wiki) from last year's students
  * Accept a pull request from J-Bastian, with a new lesson (SMN) and a
    bunch of bug fixes.
  * Various little bug fixes.
20120319:
  * Minor update on build process
20120318:
  * Allow jlm://<lesson>/<exo> links in mission texts
20120116:
  * Add an ant target to generate a source tgz (for Debian packaging)
20120110:
  * Do not even try to compile the Java sources if we were asked to
    used another language, such as Python.
    (Fixes #48: Python source code not used if some java code provided)
20111201:
  * Port some more welcome exercises to Python. 
    The translations should be updated to appear again.
  * Port all sorting exercises to Python
20111013:
  * Fix a bug in python that were due to an extra space added in front
    of the body. Damn python indentation freaks.
  * Add a debug mode to JLM, to see more infos on problem
  * Add a trap spitting a lot of info when issue #42 (line numbers are
    shifted) occures. I need more info to understand where it comes
    from.
  * Fix the array exercises (there were bugged and not properly
    integrated into po4a)
  * various improvements to the missions and their french translations
  * Remove the "clear session" menu entry. Too dangerous.
  * Graphical consistency between menu choosing the human language,
    and the one choosing the programming language
  * Show in about box where the session gets saved to avoid NFS hell
  * Various typos and little errors hunted down by Pierre-Etienne and JC
  * Improve shortest path exercise by not removing distance marks, so
    that students can compare their computation with the correct one
20111006e:
  * Allow to code in python, javascript or ruby
  * Definitely kill the linearity of lessons (combobox removed)
  * Load the lessons on need only (and save them separately from each
    other)
  * Cleanup the way identica and twitter get informed of student
    progress
  * Textual display of what's wrong when the world is not what's
    expected
  * implement the world equality for logo
  * Allow to have lectures, ie non-interactive exercises
  * Improved turmite track, with a specific view displaying the step
20110909:
  * New exercise track on turmites
  * Enforce that the buggles cannot move to outer space with
    setPos(), setX(), setY() nor peek outer space with getCell()
20110907:
  * Add a new lesson navigator allowing to break the lesson linearity
  * Use identi.ca in addition to twitter to push the success of students